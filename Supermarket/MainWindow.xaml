<dx:DXWindow  x:Class="Supermarket.MainWindow"
        xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core" 
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/core" 
             xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
             xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
              xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:Supermarket" dx:ThemeManager.ThemeName="DeepBlue"
        Title="POS" Height="450" Width="850">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="5"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="160*"/>
            <RowDefinition Height="60"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="5"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="5"></ColumnDefinition>
            <ColumnDefinition Width="300*"></ColumnDefinition>
            <ColumnDefinition Width="490*"></ColumnDefinition>
            <ColumnDefinition Width="5"></ColumnDefinition>
        </Grid.ColumnDefinitions>
    
        <StackPanel Width="Auto" Grid.Row="1" Grid.Column="1">
            <TextBlock Text="{}"/>
            <TextBox x:Name="Filter" />
            <ListBox Height="Auto" x:Name="Items" ItemsSource="{Binding MatchedItems}" SelectedItem="{Binding Selecteditem}" >
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel>
                            <TextBlock Text="{Binding SearchItems}" />
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </StackPanel>

        <dxg:GridControl Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="1" x:Name="grdInvoice" ItemsSource="{Binding InvoiceItems}" SelectionMode="Row" ScrollViewer.VerticalScrollBarVisibility="Visible" Grid.IsSharedSizeScope="True" ScrollViewer.CanContentScroll="True"  >
            <dxg:GridControl.View>
                <dxg:TableView Name="grvInvoice" NewItemRowPosition="Bottom" NavigationStyle="Cell" AllowResizing="false" AllowColumnMoving="False" ShowGroupPanel="False" AllowGrouping="False" AllowBestFit="False" AllowColumnFiltering="True" AllowSorting="False" AutoWidth="True"  ></dxg:TableView>
            </dxg:GridControl.View>

            <dxg:GridColumn FieldName="Name" Header="Name" Visible="True" Width="80" MinWidth="4" HorizontalHeaderContentAlignment="Stretch" ReadOnly="True" >
                <dxg:GridColumn.EditSettings>
                    <dxe:TextEditSettings  HorizontalContentAlignment="Left"/>
                </dxg:GridColumn.EditSettings>
            </dxg:GridColumn>
            <dxg:GridColumn FieldName="Qty" Header="QTY" Width="80" HorizontalHeaderContentAlignment="Stretch" ReadOnly="False">
                <dxg:GridColumn.EditSettings>
                    <dxe:TextEditSettings MaskType="Numeric" HorizontalContentAlignment="Left"/>
                </dxg:GridColumn.EditSettings>
            </dxg:GridColumn>
            <dxg:GridColumn FieldName="Price" Header="Price" Visible="True" Width="80" MinWidth="4" HorizontalHeaderContentAlignment="Stretch" ReadOnly="True">
                <dxg:GridColumn.EditSettings >
                    <dxe:TextEditSettings MaskType="Numeric" HorizontalContentAlignment="Left"/>
                </dxg:GridColumn.EditSettings>
            </dxg:GridColumn>
            <dxg:GridColumn FieldName="Discount" Header="Discount" Width="80" HorizontalHeaderContentAlignment="Stretch" ReadOnly="True">
                <dxg:GridColumn.EditSettings>
                    <dxe:TextEditSettings  MaskType="Numeric" HorizontalContentAlignment="Left"/>
                </dxg:GridColumn.EditSettings>
            </dxg:GridColumn>
            <dxg:GridColumn FieldName="Total" Header="Total"  Visible="True" Width="80" MinWidth="4" HorizontalHeaderContentAlignment="Stretch" ReadOnly="True">
                <dxg:GridColumn.EditSettings>
                    <dxe:TextEditSettings MaskType="Numeric" HorizontalContentAlignment="Left"/>
                </dxg:GridColumn.EditSettings>
            </dxg:GridColumn>
        </dxg:GridControl>

        <dxg:GridControl Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2" x:Name="grdResult" ItemsSource="{Binding Result}" SelectionMode="Row" ScrollViewer.VerticalScrollBarVisibility="Visible" Grid.IsSharedSizeScope="True" ScrollViewer.CanContentScroll="True"  >
            <dxg:GridControl.View>
                <dxg:TableView Name="grvResult" NavigationStyle="Cell" AllowResizing="false" AllowColumnMoving="False" ShowGroupPanel="False" AllowGrouping="False" AllowBestFit="False" AllowColumnFiltering="True" AllowSorting="False" AutoWidth="True"></dxg:TableView>
            </dxg:GridControl.View>

            <dxg:GridColumn FieldName="Total" Header="Total" Visible="True" Width="80" MinWidth="4" HorizontalHeaderContentAlignment="Stretch" ReadOnly="True" >
                <dxg:GridColumn.EditSettings>
                    <dxe:TextEditSettings  HorizontalContentAlignment="Left"/>
                </dxg:GridColumn.EditSettings>
            </dxg:GridColumn>
            <dxg:GridColumn FieldName="TotalDiscount" Header="Discount" Width="80" HorizontalHeaderContentAlignment="Stretch" ReadOnly="True">
                <dxg:GridColumn.EditSettings>
                    <dxe:TextEditSettings MaskType="Numeric" HorizontalContentAlignment="Left"/>
                </dxg:GridColumn.EditSettings>
            </dxg:GridColumn>
            <dxg:GridColumn FieldName="Net" Header="Net" Visible="True" Width="80" MinWidth="4" HorizontalHeaderContentAlignment="Stretch" ReadOnly="True">
                <dxg:GridColumn.EditSettings >
                    <dxe:TextEditSettings MaskType="Numeric" HorizontalContentAlignment="Left"/>
                </dxg:GridColumn.EditSettings>
            </dxg:GridColumn>
            <dxg:GridColumn FieldName="Paid" Header="Paid" Width="80" HorizontalHeaderContentAlignment="Stretch" ReadOnly="True">
                <dxg:GridColumn.EditSettings>
                    <dxe:TextEditSettings  MaskType="Numeric" HorizontalContentAlignment="Left"/>
                </dxg:GridColumn.EditSettings>
            </dxg:GridColumn>
            <dxg:GridColumn FieldName="Ramain" Header="Remain"  Visible="True" Width="80" MinWidth="4" HorizontalHeaderContentAlignment="Stretch" ReadOnly="True">
                <dxg:GridColumn.EditSettings>
                    <dxe:TextEditSettings MaskType="Numeric" HorizontalContentAlignment="Left"/>
                </dxg:GridColumn.EditSettings>
            </dxg:GridColumn>
        </dxg:GridControl>

        <Grid Grid.Column="1" Grid.Row="4" Grid.ColumnSpan="2" x:Name="grdGeneralStatus" Margin="4">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="75"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="60"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="70"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="100"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="40"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="40"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Label Grid.Column="0" VerticalContentAlignment="Center" Foreground="Black" FontWeight="Bold" Content="User Name: "/>
            <Label x:Name="lblUserName" Grid.Column="1" VerticalContentAlignment="Center" Foreground="Gray" HorizontalContentAlignment="Stretch"
                                               ToolTip="User Name"/>
            <Label Grid.Column="2" VerticalContentAlignment="Center" Content="Shift ID: " FontWeight="Bold" Foreground="Black"/>
            <Label x:Name="lblShifID" Grid.Column="3" VerticalContentAlignment="Center" Foreground="Gray" HorizontalContentAlignment="Stretch" 
                                               ToolTip="Shift ID"/>

            <Label Grid.Column="4" VerticalContentAlignment="Center" Foreground="Black" FontWeight="Bold" Content="Invoice ID: "/>
            <Label x:Name="lblInvoiceID" Grid.Column="5" VerticalContentAlignment="Center" Foreground="Gray" HorizontalContentAlignment="Stretch"
                                               ToolTip="Invoice ID"/>
            <Label Grid.Column="6" VerticalContentAlignment="Center" Content="Company Name: " FontWeight="Bold" Foreground="Black"/>
            <Label x:Name="lblCompanyName" Grid.Column="7" VerticalContentAlignment="Center" Foreground="Gray" HorizontalContentAlignment="Stretch" 
                                               ToolTip="Company Name"/>

            <Label Grid.Column="8" VerticalContentAlignment="Center" Foreground="Black" FontWeight="Bold" Content="Date: "/>
            <TextBlock x:Name="txtDate" Grid.Column="9"  Foreground="Gray" Text="{Binding Source={x:Static sys:DateTime.Now}, StringFormat=dd-MMM-yyyy}" VerticalAlignment="Center"
                                               ToolTip="Date"/>
            <Label Grid.Column="10" VerticalContentAlignment="Center" Content="Time: " FontWeight="Bold" Foreground="Black"/>
            <TextBlock x:Name="txtTime" Text="{Binding Source={x:Static sys:DateTime.Now}, StringFormat=hh:mm:ss}" Grid.Column="11"  Foreground="Gray" ToolTip="Time" VerticalAlignment="Center"/>
        </Grid>

        <Grid Grid.Column="2" Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="35*"/>
                <RowDefinition Height="35*"/>
                <RowDefinition Height="35*"/>
                <RowDefinition Height="35*"/>
                <RowDefinition Height="35*"/>
                <RowDefinition Height="35*"/>
                <RowDefinition Height="35*"/>
                <RowDefinition Height="35*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5"></ColumnDefinition>
                <ColumnDefinition Width="120*"></ColumnDefinition>
                <ColumnDefinition Width="120*"></ColumnDefinition>
                <ColumnDefinition Width="120*"></ColumnDefinition>
                <ColumnDefinition Width="120*"></ColumnDefinition>
                <ColumnDefinition Width="5"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            
            <Button x:Name="btnQuick1" Grid.Column="3" Grid.Row="0" Background="#084B8A" Width="Auto" Height="auto" Margin="4,4,4,4" BorderThickness="0,1,1,1" BorderBrush="#FF20B4EC" Click="btnQuick1_Click" >
                <Viewbox StretchDirection="Both" Stretch="Uniform">
                    <TextBlock Foreground="White" Text="Quick Item1" FontWeight="Bold" Margin="1"/>
                </Viewbox>
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Grid.Column="4" Grid.Row="0" Background="#084B8A" Width="Auto" Height="auto" Margin="4,4,4,4" BorderBrush="#FF20B4EC">
                <Viewbox StretchDirection="Both" Stretch="Uniform">
                    <TextBlock Foreground="White" Text="Quick Item2" FontWeight="Bold" Margin="1"/>
                </Viewbox>
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Grid.Column="3" Grid.Row="1" Background="#084B8A" Width="Auto" Height="auto" Margin="4,4,4,4" BorderThickness="0,1,1,1" BorderBrush="#FF20B4EC" >
                <Viewbox StretchDirection="Both" Stretch="Uniform">
                    <TextBlock Foreground="White" Text="Quick Item3" FontWeight="Bold" Margin="1"/>
                </Viewbox>
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Grid.Column="4" Grid.Row="1" Background="#084B8A" Width="Auto" Height="auto" Margin="4,4,4,4" BorderBrush="#FF20B4EC">
                <Viewbox StretchDirection="Both" Stretch="Uniform">
                    <TextBlock Foreground="White" Text="Quick Item4" FontWeight="Bold" Margin="1"/>
                </Viewbox>
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Grid.Column="3" Grid.Row="2" Background="#084B8A" Width="Auto" Height="auto" Margin="4,4,4,4" BorderThickness="0,1,1,1" BorderBrush="#FF20B4EC" >
                <Viewbox StretchDirection="Both" Stretch="Uniform">
                    <TextBlock Foreground="White" Text="Quick Item5" FontWeight="Bold" Margin="1"/>
                </Viewbox>
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Grid.Column="4" Grid.Row="2" Background="#084B8A" Width="Auto" Height="auto" Margin="4,4,4,4" BorderBrush="#FF20B4EC">
                <Viewbox StretchDirection="Both" Stretch="Uniform">
                    <TextBlock Foreground="White" Text="Quick Item6" FontWeight="Bold" Margin="1"/>
                </Viewbox>
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Grid.Column="3" Grid.Row="3" Background="#084B8A" Width="Auto" Height="auto" Margin="4,4,4,4" BorderThickness="0,1,1,1" BorderBrush="#FF20B4EC" >
                <Viewbox StretchDirection="Both" Stretch="Uniform">
                    <TextBlock Foreground="White" Text="Quick Item7" FontWeight="Bold" Margin="1"/>
                </Viewbox>
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Grid.Column="4" Grid.Row="3" Background="#084B8A" Width="Auto" Height="auto" Margin="4,4,4,4" BorderBrush="#FF20B4EC">
                <Viewbox StretchDirection="Both" Stretch="Uniform">
                    <TextBlock Foreground="White" Text="Quick Item8" FontWeight="Bold" Margin="1"/>
                </Viewbox>
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Grid.Column="3" Grid.Row="4" Background="#084B8A" Width="Auto" Height="auto" Margin="4,4,4,4" BorderThickness="0,1,1,1" BorderBrush="#FF20B4EC" >
                <Viewbox StretchDirection="Both" Stretch="Uniform">
                    <TextBlock Foreground="White" Text="Quick Item9" FontWeight="Bold" Margin="1" />
                </Viewbox>
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Grid.Column="4" Grid.Row="4" Background="#084B8A" Width="Auto" Height="auto" Margin="4,4,4,4" BorderBrush="#FF20B4EC">
                <Viewbox StretchDirection="Both" Stretch="Uniform">
                    <TextBlock Foreground="White" Text="Quick Item10" FontWeight="Bold" Margin="1"/>
                </Viewbox>
                    <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Grid.Column="3" Grid.Row="5" Background="#084B8A" Width="Auto" Height="auto" Margin="4,4,4,4" BorderThickness="0,1,1,1" BorderBrush="#FF20B4EC" >
                <Viewbox StretchDirection="Both" Stretch="Uniform">
                    <TextBlock Foreground="White" Text="Quick Item11" FontWeight="Bold" Margin="1"/>
                </Viewbox>
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Grid.Column="4" Grid.Row="5" Background="#084B8A" Width="Auto" Height="auto" Margin="4,4,4,4" BorderBrush="#FF20B4EC">
                <Viewbox StretchDirection="Both" Stretch="Uniform">
                    <TextBlock Foreground="White" Text="Quick Item12" FontWeight="Bold" Margin="1"/>
                </Viewbox>
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Grid.Column="3" Grid.Row="6" Background="#084B8A" Width="Auto" Height="auto" Margin="4,4,4,4" BorderThickness="0,1,1,1" BorderBrush="#FF20B4EC" >
                <Viewbox StretchDirection="Both" Stretch="Uniform">
                    <TextBlock Foreground="White" Text="Quick Item13" FontWeight="Bold" Margin="1"/>
                </Viewbox>
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Grid.Column="4" Grid.Row="6" Background="#084B8A" Width="Auto" Height="auto" Margin="4,4,4,4" BorderBrush="#FF20B4EC">
                <Viewbox StretchDirection="Both" Stretch="Uniform">
                    <TextBlock Foreground="White" Text="Quick Item14" FontWeight="Bold" Margin="1"/>
                </Viewbox>
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Grid.Column="3" Grid.Row="7" Background="#084B8A" Width="Auto" Height="auto" Margin="4,4,4,4" BorderThickness="0,1,1,1" BorderBrush="#FF20B4EC" >
                <Viewbox StretchDirection="Both" Stretch="Uniform">
                    <TextBlock Foreground="White" Text="Quick Item15" FontWeight="Bold" Margin="1" />
                </Viewbox>
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button Grid.Column="4" Grid.Row="7" Background="#084B8A" Width="Auto" Height="auto" Margin="4,4,4,4" BorderBrush="#FF20B4EC">
                <Viewbox StretchDirection="Both" Stretch="Uniform">
                    <TextBlock Foreground="White" Text="Quick Item16" FontWeight="Bold" FontStretch="Normal" Margin="1" />
                </Viewbox>
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>



            <Button x:Name="btnVoidAll" Grid.Column="1" Grid.Row="0" Background="#B40404" Width="Auto" Height="auto" Margin="4,4,4,4" BorderThickness="0,1,1,1" BorderBrush="#FF20B4EC" Click="btnVoidAll_Click" >
                <TextBlock Foreground="White" Text="VoidAll" FontWeight="Bold" FontSize="20" VerticalAlignment="Center"/>
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button x:Name="btnDiscLineValue" Grid.Column="2" Grid.Row="0" Background="#084B8A" Width="Auto" Height="auto" Margin="4,4,4,4" BorderBrush="#FF20B4EC" Click="btnDiscLineValue_Click">
                <TextBlock Foreground="White" Text="Discount Line $" FontWeight="Bold" FontSize="13" VerticalAlignment="Center"/>
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <Button x:Name="btnVoidLine" Grid.Column="1" Grid.Row="1"  Background="#B40404" Width="Auto" Height="auto" Margin="4,4,4,4" BorderThickness="0,1,1,1" BorderBrush="#FF20B4EC" Click="btnVoidLine_Click" >
                <TextBlock Foreground="White" Text="Void Line" FontWeight="Bold" FontSize="20" VerticalAlignment="Center"/>
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button x:Name="btnDiscLinePercent" Grid.Column="2"  Grid.Row="1"  Background="#084B8A" Width="Auto" Height="auto" Margin="4,4,4,4" BorderBrush="#FF20B4EC" Click="btnDiscLinePercent_Click">
                <TextBlock Foreground="White" Text="Discount Line %" FontWeight="Bold" FontSize="13" VerticalAlignment="Center"/>
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            
            <Button x:Name="btnHoldInv1" Grid.Column="1" Grid.Row="2"  Background="#21610B" Width="Auto" Height="auto" Margin="4,4,4,4" BorderThickness="0,1,1,1" BorderBrush="#FF20B4EC" Click="btnHoldInv1_Click">
                <TextBlock Foreground="White" Text="HoldInv1" FontWeight="Bold" FontSize="20" VerticalAlignment="Center" />
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button x:Name="btnPriceCheck" Grid.Column="2" Grid.Row="2"  Background="#084B8A" Width="Auto" Height="auto" Margin="4,4,4,4" BorderBrush="#FF20B4EC" Click="btnPriceCheck_Click">
                <TextBlock Foreground="White" Text="price Check" FontWeight="Bold" FontSize="18" VerticalAlignment="Center"/>
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <Button x:Name="btnHoldInv2" Grid.Column="1" Grid.Row="3" Background="#21610B" Width="Auto" Height="auto" Margin="4,4,4,4" BorderThickness="0,1,1,1" BorderBrush="#FF20B4EC" Click="btnHoldInv2_Click" >
                <TextBlock Foreground="White" Text="HoldInv2" FontWeight="Bold" FontSize="20" VerticalAlignment="Center"/>
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>
            <Button x:Name="btnReturn" Grid.Column="2"  Grid.Row="3" Background="#084B8A" Width="Auto" Height="auto" Margin="4,4,4,4" BorderBrush="#FF20B4EC" Click="btnReturn_Click">
                <TextBlock Foreground="White" Text="Return" FontWeight="Bold" FontSize="20" VerticalAlignment="Center"/>
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <Button x:Name="btTransaction" Grid.Column="1" Grid.Row="5" Grid.ColumnSpan="2" Background="#084B8A" Width="Auto" Height="auto" Margin="4,4,4,4" BorderThickness="0,1,1,1" BorderBrush="#FF20B4EC" Click="btTransaction_Click" >
                <TextBlock Foreground="White" Text="Transaction" FontWeight="Bold" FontSize="20" VerticalAlignment="Center" />
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <Button x:Name="btCash" Grid.Column="1" Grid.Row="6" Grid.ColumnSpan="2" Grid.RowSpan="2" Background="#0489B1" Width="Auto" Height="auto" Margin="4,4,4,4" BorderThickness="0,1,1,1" BorderBrush="#FF20B4EC" Click="btCash_Click" >
                <TextBlock Foreground="Black" Text="Cash" FontWeight="Bold" FontSize="40" VerticalAlignment="Center"/>
                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="DarkGray"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

        </Grid>
     
    </Grid>
</dx:DXWindow>
